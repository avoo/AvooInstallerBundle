<?php

namespace {{ namespace }}\DependencyInjection;

{% block use_statements %}
use Symfony\Component\Config\Definition\Builder\ArrayNodeDefinition;
use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;
{% endblock use_statements %}

{% block class_definition %}
/**
 * This is the class that validates and merges configuration from your app/config files
 *
 * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html#cookbook-bundles-extension-config-class}
 */
class Configuration implements ConfigurationInterface
{% endblock class_definition %}
{
{% block class_body %}
    /**
     * {@inheritdoc}
     */
    public function getConfigTreeBuilder()
    {
        $root = new TreeBuilder();
        $rootNode = $root->root('{{ applicationName|lower }}_backend');

        $rootNode
            ->addDefaultsIfNotSet()
            ->children()
                ->scalarNode('driver')->cannotBeOverwritten()->isRequired()->cannotBeEmpty()->end()
            ->end();

        $this->addMenuBuilderSection($rootNode);

        return $root;
    }

    /**
     * Adds menu builder section.
     *
     * @param ArrayNodeDefinition $node
     */
    private function addMenuBuilderSection(ArrayNodeDefinition $node)
    {
        $node
            ->addDefaultsIfNotSet()
            ->children()
                ->arrayNode('menu_builder')
                    ->children()
                        ->variableNode('attributes')
                            ->defaultValue(array())
                        ->end()
                        ->variableNode('label_attributes')
                            ->defaultValue(array())
                        ->end()
                        ->arrayNode('nav')
                            ->useAttributeAsKey('name')
                            ->prototype('array')
                                ->children()
                                    ->scalarNode('label')->isRequired()->end()
                                    ->scalarNode('route')->defaultValue('')->end()
                                    ->scalarNode('role')->end()
                                    ->variableNode('label_attributes')
                                        ->defaultValue(array())
                                    ->end()
                                    ->variableNode('attributes')
                                        ->defaultValue(array())
                                    ->end()
                                    ->arrayNode('sub_menu')
                                        ->useAttributeAsKey('name')
                                        ->prototype('array')
                                            ->children()
                                                ->scalarNode('label')->isRequired()->end()
                                                ->scalarNode('route')->defaultValue('')->end()
                                                ->scalarNode('role')->end()
                                                ->variableNode('label_attributes')
                                                    ->defaultValue(array())
                                                ->end()
                                                ->variableNode('attributes')
                                                    ->defaultValue(array())
                                                ->end()
                                                ->variableNode('sub_menu')
                                                    ->defaultValue(array())->end()
                                                ->end()
                                            ->end()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
            ->end();
    }
{% endblock class_body %}
}
